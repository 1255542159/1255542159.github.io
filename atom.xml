<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你如清风的眼</title>
  
  
  <link href="http://125542159.github.io/atom.xml" rel="self"/>
  
  <link href="http://125542159.github.io/"/>
  <updated>2020-03-27T15:56:11.355Z</updated>
  <id>http://125542159.github.io/</id>
  
  <author>
    <name>Joy</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo个人博客添加宠物</title>
    <link href="http://125542159.github.io/2020/11/29/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%AE%A0%E7%89%A9/"/>
    <id>http://125542159.github.io/2020/11/29/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%AE%A0%E7%89%A9/</id>
    <published>2020-11-29T11:04:45.411Z</published>
    <updated>2020-03-27T15:56:11.355Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="效果类似于下图"><a href="#效果类似于下图" class="headerlink" title="效果类似于下图"></a>效果类似于下图</h1><p><img src="http://ww1.sinaimg.cn/large/a517fa25gy1g9alcbz61sj20j1091aa9.jpg" alt="J0M_4XLIPS_Q(0%PDXYEJIW.png">  </p><h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p>cmd切换到你的博客的路径里，然后输入如下代码：<br><code>npm install -save hexo-helper-live2d</code><br><img src="http://ww1.sinaimg.cn/large/a517fa25gy1g9alfmegs8j20le08jaao.jpg" alt="3123.png">  </p><h2 id="下载模型"><a href="#下载模型" class="headerlink" title="下载模型"></a>下载模型</h2><p>live2d-widget-model-chitose<br>live2d-widget-model-epsilon2_1<br>live2d-widget-model-gf<br>live2d-widget-model-haru/01 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haru/02 (use npm install –save live2d-widget-model-haru)<br>live2d-widget-model-haruto<br>live2d-widget-model-hibiki<br>live2d-widget-model-hijiki<br>live2d-widget-model-izumi<br>live2d-widget-model-koharu<br>live2d-widget-model-miku<br>live2d-widget-model-ni-j<br>live2d-widget-model-nico<br>live2d-widget-model-nietzsche<br>live2d-widget-model-nipsilon<br>live2d-widget-model-nito<br>live2d-widget-model-shizuku<br>live2d-widget-model-tororo<br>live2d-widget-model-tsumiki<br>live2d-widget-model-unitychan<br>live2d-widget-model-wanko<br>live2d-widget-model-z16  </p><p>比如我选择的的是live2d-widget-model-hijiki 模型包<br>在hexo博客根目录选择cmd命令窗口或者git bash 输入以下代码<br><code>npm install live2d-widget-model-hijiki</code><br>执行安装就完事了</p><p>##配置<br>打开个人Hexo博客文件根目录下的 _config.yml 文件，在最后添加一下代码<br>示例:<br>live2d:<br>  enable: true<br>  scriptFrom: local<br>  pluginRootPath: live2dw/<br>  pluginJsPath: lib/<br>  pluginModelPath: assets/<br>  tagMode: false<br>  debug: false<br>  model:<br>    use: live2d-widget-model-hijiki  //这里是模型包<br>  display:<br>    position: right<br>    width: 150<br>    height: 300<br>  mobile:<br>    show: true  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>如何使用Hexo搭建个人博客</title>
    <link href="http://125542159.github.io/2020/11/29/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://125542159.github.io/2020/11/29/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2020-11-29T11:04:45.395Z</published>
    <updated>2020-03-27T15:56:32.939Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="需要下载的软件"><a href="#需要下载的软件" class="headerlink" title="需要下载的软件"></a>需要下载的软件</h2><p>1，下载Node.js 地址:<a href="https://nodejs.org/">https://nodejs.org/</a><br><img src="https://i.bmp.ovh/imgs/2019/11/cfb8c8a2d13278f3.png"><br>2，下载Git 地址:<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><img src="https://ftp.bmp.ovh/imgs/2019/11/6abf7699dc2629ce.png">  </p><h2 id="软件安装完后的操作步骤"><a href="#软件安装完后的操作步骤" class="headerlink" title="软件安装完后的操作步骤"></a>软件安装完后的操作步骤</h2><p>1，下载完后我们去本地磁盘新建一个Hexo文件夹，在这个新建的文件夹内单击鼠标右键然后选择Git Bash Here<br><img src="https://i.bmp.ovh/imgs/2019/11/cbb62262cd443c45.png"><br>2，输入命令<code>node -v</code>查看Nodejs版本，输入命令<code>git --version</code>查看git版本<br><img src="https://i.bmp.ovh/imgs/2019/11/840778a7760d71dd.png"><br>3，输入命令<code>npm install hexo-cli -g</code>安装Hexo<br><img src="https://i.bmp.ovh/imgs/2019/11/3ce720dad7a728ed.png"><br>4，你可以输入命令<code>hexo -v</code>来查看当前hexo 版本<br><img src="https://i.bmp.ovh/imgs/2019/11/65a068666ab9fb38.png"><br>5，接下来我们初始化hexo，输入命令<code>hexo init myblog</code>（myblog可以自己设置)<br><img src="https://i.bmp.ovh/imgs/2019/11/b50b37e64e30a800.png"><br>6，我们进入刚刚创建的myblog文件夹，命令<code>cd myblog/</code>然后输入<code>npm install</code>我们的文件夹会出现以下的内容<br><img src="https://i.bmp.ovh/imgs/2019/11/1668a160318c27a7.png"><br>node_modules: 依赖包<br>public：存放生成的页面<br>scaffolds：生成文章的一些模板<br>source：用来存放你的文章<br>themes：主题<br> _config.yml: 博客的配置文件<br>7，然后输入命令<code>hexo g</code>生成，运行完后输入命令<code>hexo s</code>启动，之后会给你一个地址例如:<a href="https://localhost:4000/">https://localhost:4000</a><br><img src="https://s2.ax1x.com/2019/11/23/MqXXng.md.png" alt="MqXXng.md.png"><br>8,我们通过浏览器打开会出现以下页面<br><img src="https://ftp.bmp.ovh/imgs/2019/11/c6eefe392b45635f.png">  </p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>到此我们的搭建就结束了，注意:这个博客是搭建在本地的，通过<code>hexo s</code>命令来启动的，如果它关闭了，博客也会关闭。大家可以通过部署到github来让其他人访问。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Hexo" scheme="http://125542159.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Mysql报错Error 1130</title>
    <link href="http://125542159.github.io/2020/05/21/Mysql%E6%8A%A5%E9%94%99Error%201130/"/>
    <id>http://125542159.github.io/2020/05/21/Mysql%E6%8A%A5%E9%94%99Error%201130/</id>
    <published>2020-05-21T12:22:07.000Z</published>
    <updated>2020-06-26T14:35:05.563Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>今天在用navicat连接非本地的Mysql服务器的数据库，居然无法连接很奇怪，报1130错误，</p><p>ERROR 1130: Host 192.168.3.100 is not allowed to connect to this MySQL server</p><p>猜想是无法给远程连接的用户权限问题。</p><h2 id="常用的解决方法"><a href="#常用的解决方法" class="headerlink" title="常用的解决方法"></a>常用的解决方法</h2><p>在本机登入mysql后，更改 “mysql” 数据库里的 “user” 表里的 “host” 项，从”localhost”改称’%’。</p><ul><li>以权限用户root登录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li>选择mysql库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;use mysql;</span><br></pre></td></tr></table></figure><ul><li>查看mysql库中的user表的host值（即可进行连接访问的主机/IP名称）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;select &#39;host&#39; from user where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure><ul><li>修改host值（以通配符%的内容增加主机/IP地址），当然也可以直接增加IP地址</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;update user set host &#x3D; &#39;%&#39; where user &#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure><ul><li>刷新MySQL的系统权限相关表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;flush privileges;</span><br></pre></td></tr></table></figure><ul><li>再重新查看user表时，有修改。。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;select &#39;host&#39;  from user where user&#x3D;&#39;root&#39;;</span><br></pre></td></tr></table></figure><p>记得Mysql服务需要重新启动（确保修改有效），否则可能</p><h2 id="最快的解决方法"><a href="#最快的解决方法" class="headerlink" title="最快的解决方法"></a>最快的解决方法</h2><ul><li>授权root用户对所有数据库在任何ip都可以进行操作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all on *.* to root@&#39;%&#39; identified by &#39;123456&#39; with grant option;</span><br></pre></td></tr></table></figure><ul><li>刷新数据库</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Mysql" scheme="http://125542159.github.io/categories/Mysql/"/>
    
    
    <category term="Mysql" scheme="http://125542159.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Centos7安装Mysql5.7</title>
    <link href="http://125542159.github.io/2020/05/20/Centos7%E5%AE%89%E8%A3%85Mysql5-7/"/>
    <id>http://125542159.github.io/2020/05/20/Centos7%E5%AE%89%E8%A3%85Mysql5-7/</id>
    <published>2020-05-20T11:41:07.000Z</published>
    <updated>2020-06-03T13:49:58.605Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="第一步-Mysql的安装下载并安装-MySQL-官方的-Yum-Repository"><a href="#第一步-Mysql的安装下载并安装-MySQL-官方的-Yum-Repository" class="headerlink" title="第一步 Mysql的安装下载并安装 MySQL 官方的 Yum Repository"></a>第一步 Mysql的安装下载并安装 MySQL 官方的 Yum Repository</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -i -c http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>使用上面的命令就直接下载了安装用的 Yum Repository，大概 25KB 的样子，然后就可以直接 yum 安装了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><p>之后就开始安装MySql服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><p>这步可能会花些时间，安装完成后就会覆盖掉之前的 mariadb。</p><p>至此 MySQL 就安装完成了，然后是对 MySQL 的一些设置。</p><h2 id="2-MySQL-数据库设置"><a href="#2-MySQL-数据库设置" class="headerlink" title="2 MySQL 数据库设置"></a>2 MySQL 数据库设置</h2><p>首先启动 MySQL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start  mysqld.service</span><br></pre></td></tr></table></figure><p>查看 MySQL 运行状态，运行状态如图：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld.service</span><br></pre></td></tr></table></figure><p>此时 MySQL 已经开始正常运行，不过要想进入 MySQL 还得先找出此时 root 用户的密码，通过如下命令可以在日志文件中找出密码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; &#x2F;var&#x2F;log&#x2F;mysqld.log</span><br></pre></td></tr></table></figure><p>如下命令进入数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p> 输入初始密码，此时不能做任何事情，因为 MySQL 默认必须修改密码之后才能操作数据库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;new password&#39;;</span><br></pre></td></tr></table></figure><p> 这里有个问题，新密码设置的时候如果设置的过于简单会报错：</p><p> 原因是因为 MySQL 有密码设置的规范，具体是与 validate_password_policy 的值有关：</p><p> MySQL 完整的初始密码规则可以通过如下命令查看：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SHOW VARIABLES LIKE &#39;validate_password%&#39;;</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">| Variable_name                        | Value |</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">| validate_password_check_user_name    | OFF   |</span><br><span class="line">| validate_password_dictionary_file    |       |</span><br><span class="line">| validate_password_length             | 4     |</span><br><span class="line">| validate_password_mixed_case_count   | 1     |</span><br><span class="line">| validate_password_number_count       | 1     |</span><br><span class="line">| validate_password_policy             | LOW   |</span><br><span class="line">| validate_password_special_char_count | 1     |</span><br><span class="line">+--------------------------------------+-------+</span><br><span class="line">7 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure><p> 密码的长度是由 validate_password_length 决定的，而 validate_password_length 的计算公式是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">validate_password_length &#x3D; validate_password_number_count + validate_password_special_char_count + (2 * validate_password_mixed_case_count)</span><br></pre></td></tr></table></figure><p>设置密码安全级别</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_policy&#x3D;0;</span><br></pre></td></tr></table></figure><p>设置密码最小长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set global validate_password_length&#x3D;1;</span><br></pre></td></tr></table></figure><p>但此时还有一个问题，就是因为安装了 Yum Repository，以后每次 yum 操作都会自动更新，需要把这个卸载掉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y remove mysql57-community-release-el7-10.noarch;</span><br></pre></td></tr></table></figure><p>此时才算真的完成了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Centos" scheme="http://125542159.github.io/categories/Centos/"/>
    
    
    <category term="Centos" scheme="http://125542159.github.io/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Spring一Hello World实例</title>
    <link href="http://125542159.github.io/2020/04/01/Spring%E4%B8%80HelloWorld/"/>
    <id>http://125542159.github.io/2020/04/01/Spring%E4%B8%80HelloWorld/</id>
    <published>2020-04-01T11:41:07.000Z</published>
    <updated>2020-04-01T14:39:20.684Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p>学习任何一门计算机语言，我们都避免不了HelloWorld.所以让我们编写一个简单的Spring程序吧!<br>运行环境:<br>1.IDEA2019 3.3<br>2.Jdk1.8<br>3.Spring5.2.3  </p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构:"></a>项目结构:</h2><p><img src="http://ww1.sinaimg.cn/mw690/0071fQo9ly1gdel6xthiaj30dy0ny3yx.jpg" alt="2.png">  </p><h2 id="第一步：创建Java项目"><a href="#第一步：创建Java项目" class="headerlink" title="第一步：创建Java项目"></a>第一步：创建Java项目</h2><p>使用IDEA创建一个项目。按照选项File -&gt; New -&gt; Projects -&gt; Spring,然后一路Next，第一次创建有点慢，IDEA需要去下载依赖包。  </p><p><img src="http://ww1.sinaimg.cn/large/0071fQo9ly1gdejjcrkv6j31dc0p80us.jpg" alt="8E35C0D9-A009-4c03-B04B-5323E6F100B8.png">  </p><h2 id="第二步：添加依赖"><a href="#第二步：添加依赖" class="headerlink" title="第二步：添加依赖"></a>第二步：添加依赖</h2><p>若下载失败，我们就需要手动导包，按照选项File -&gt; Project Structure -&gt; Libraries -&gt; + -&gt; Java。我们选择我们需要导入的依赖即可。  </p><p><img src="http://ww1.sinaimg.cn/large/0071fQo9ly1gdejywr9taj31em0hfaas.jpg" alt="1.png"></p><h2 id="第三步：创建MainTest-java和bean-xml"><a href="#第三步：创建MainTest-java和bean-xml" class="headerlink" title="第三步：创建MainTest.java和bean.xml"></a>第三步：创建MainTest.java和bean.xml</h2><p>我们在src目录下创建一个新的包com.hexo.blog，然后在其下面创建MainTest.java和Person.java文件,在src目录下创建beans.xml。<br>以下是MainTest.java代码：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package com.hexo.blog;</span><br><span class="line"></span><br><span class="line">import org.springframework.context.ApplicationContext;</span><br><span class="line">import org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line">public class HelloWorld &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        ApplicationContext context &#x3D; new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</span><br><span class="line">        Person hello &#x3D; (Person) context.getBean(&quot;hello&quot;);</span><br><span class="line">        System.out.println(hello);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;&#96;&#96;&#96;</span><br><span class="line">  </span><br><span class="line">以下是Person.java代码：  </span><br></pre></td></tr></table></figure><p>package com.hexo.blog;</p><p>public class Person {<br>    private String message;</p><pre><code>public String getMessage() &#123;    return message;&#125;public void setMessage(String message) &#123;    this.message = message;&#125;@Overridepublic String toString() &#123;    return &quot;Person&#123;&quot; +            &quot;message=&#39;&quot; + message + &#39;\&#39;&#39; +            &#39;&#125;&#39;;&#125;</code></pre><p>}```</p><p>以下是beans.xml代码：  </p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean id=&quot;hello&quot; class=&quot;com.hexo.blog.Person&quot;&gt;        &lt;property name=&quot;message&quot; value=&quot;你好,世界&quot;/&gt;    &lt;/bean&gt;&lt;/beans&gt;```## 第四步：运行程序  ## ![2.png](http://ww1.sinaimg.cn/large/0071fQo9ly1gdel56p9xcj314b08jjrr.jpg)  </code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="Spring" scheme="http://125542159.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="http://125542159.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Java使用jdbc连接数据库</title>
    <link href="http://125542159.github.io/2020/03/22/Git%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://125542159.github.io/2020/03/22/Git%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2020-03-22T14:13:21.000Z</published>
    <updated>2020-06-26T14:51:37.104Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><pre><code>public class MysqlDemo &#123;/*java操作jdbc */public static void main(String[] args) &#123;    try &#123;        //1.注册驱动(引入驱动包)        //链接:[https://pan.baidu.com/s/1AIN0ESKkxGo8qV46wVegLw](https://pan.baidu.com/s/1AIN0ESKkxGo8qV46wVegLw)提取码：hd3i         Class.forName(&quot;com.mysql.jdbc.Driver&quot;);        //2.获取连接        Connection connection = DriverManager.getConnection(&quot;jdbc:mysql://localhost:3306/数据库名&quot;,&quot;数据库用户名&quot;,&quot;数据库密码&quot;);        //3.获取statement对象        Statement statement = connection.createStatement();        //4.执行sql语句//得到结果集        String sql = &quot;select id,name,age,sex from student_1&quot;;        ResultSet resultSet = statement.executeQuery(sql);        //5.遍历结果集，取出数据        while (resultSet.next())&#123;              //根据列标签来获取值            int id = resultSet.getInt(&quot;id&quot;);            String name = resultSet.getString(&quot;name&quot;);            int age = resultSet.getInt(&quot;age&quot;);            String sex = resultSet.getString(&quot;sex&quot;);            System.out.println(id+name+age+sex);        &#125;        //6.先开的后关        resultSet.close();        statement.close();        connection.close();    &#125; catch (ClassNotFoundException | SQLException e) &#123;        e.printStackTrace();    &#125;&#125;&#125;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Git" scheme="http://125542159.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装Mysql解压版</title>
    <link href="http://125542159.github.io/2019/12/09/%E5%AE%89%E8%A3%85Mysql%E8%A7%A3%E5%8E%8B%E7%89%88/"/>
    <id>http://125542159.github.io/2019/12/09/%E5%AE%89%E8%A3%85Mysql%E8%A7%A3%E5%8E%8B%E7%89%88/</id>
    <published>2019-12-09T11:14:21.000Z</published>
    <updated>2020-03-27T15:56:22.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="Windows安装Mysql解压版"><a href="#Windows安装Mysql解压版" class="headerlink" title="Windows安装Mysql解压版"></a>Windows安装Mysql解压版</h1><h2 id="mysql下载地址-https-pan-baidu-com-s-17De5BaiWcWdMgleO2FVpRQ"><a href="#mysql下载地址-https-pan-baidu-com-s-17De5BaiWcWdMgleO2FVpRQ" class="headerlink" title="mysql下载地址:https://pan.baidu.com/s/17De5BaiWcWdMgleO2FVpRQ"></a>mysql下载地址:<a href="https://pan.baidu.com/s/17De5BaiWcWdMgleO2FVpRQ">https://pan.baidu.com/s/17De5BaiWcWdMgleO2FVpRQ</a></h2><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="1-将压缩包mysql-5-7-17-winx64-zip解压到目标位置。如：D盘。"><a href="#1-将压缩包mysql-5-7-17-winx64-zip解压到目标位置。如：D盘。" class="headerlink" title="1,将压缩包mysql-5.7.17-winx64.zip解压到目标位置。如：D盘。"></a>1,将压缩包mysql-5.7.17-winx64.zip解压到目标位置。如：D盘。</h3><h3 id="2-在解压文件夹中新建一个名为data的文件夹。"><a href="#2-在解压文件夹中新建一个名为data的文件夹。" class="headerlink" title="2,在解压文件夹中新建一个名为data的文件夹。"></a>2,在解压文件夹中新建一个名为data的文件夹。</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qrmifsluj30q50bzwfd.jpg" alt="avatar"></p><h3 id="3-打开配置文件my-default-ini看到里面的basedir-MySQL的安装路径-和datadir（数据库文件所在路径）是没有打开的，前面有-，路径也是以“……”表示。去掉basedir和datadir前面的-，basedir添加的是MySQL的解压路径；datadir添加的是MySQL的data文件夹路径。"><a href="#3-打开配置文件my-default-ini看到里面的basedir-MySQL的安装路径-和datadir（数据库文件所在路径）是没有打开的，前面有-，路径也是以“……”表示。去掉basedir和datadir前面的-，basedir添加的是MySQL的解压路径；datadir添加的是MySQL的data文件夹路径。" class="headerlink" title="3,打开配置文件my-default.ini看到里面的basedir(MySQL的安装路径)和datadir（数据库文件所在路径）是没有打开的，前面有#，路径也是以“……”表示。去掉basedir和datadir前面的#，basedir添加的是MySQL的解压路径；datadir添加的是MySQL的data文件夹路径。"></a>3,打开配置文件my-default.ini看到里面的basedir(MySQL的安装路径)和datadir（数据库文件所在路径）是没有打开的，前面有#，路径也是以“……”表示。去掉basedir和datadir前面的#，basedir添加的是MySQL的解压路径；datadir添加的是MySQL的data文件夹路径。</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qrqjcfcjj30fd0ahtc4.jpg" alt="avatar"><br><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsqoqqmoj30fe0dh775.jpg" alt="avatar">  </p><h3 id="4-接下来就是配置环境变量，首先把bin的地址复制：打开MySQL解压文件夹里面的bin文件夹，将鼠标点击到地址栏选中，复制地址（这样做的目的是防止打字出错，而且方便）。"><a href="#4-接下来就是配置环境变量，首先把bin的地址复制：打开MySQL解压文件夹里面的bin文件夹，将鼠标点击到地址栏选中，复制地址（这样做的目的是防止打字出错，而且方便）。" class="headerlink" title="4,接下来就是配置环境变量，首先把bin的地址复制：打开MySQL解压文件夹里面的bin文件夹，将鼠标点击到地址栏选中，复制地址（这样做的目的是防止打字出错，而且方便）。"></a>4,接下来就是配置环境变量，首先把bin的地址复制：打开MySQL解压文件夹里面的bin文件夹，将鼠标点击到地址栏选中，复制地址（这样做的目的是防止打字出错，而且方便）。</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsrur15hj30fe08gwhp.jpg" alt="avatar">  </p><h3 id="5-把刚刚复制的bin路径添加的Path变量值，具体方法是：打开电脑桌面-计算机—-gt-右击“属性”—-gt-高级系统设置—-gt-高级—-gt-环境变量（N）—-gt-修改Path；就是将复制的地址栏粘贴到最后。（这里注意的是不同的路径之间用英文的“；”分开）确定，退出。"><a href="#5-把刚刚复制的bin路径添加的Path变量值，具体方法是：打开电脑桌面-计算机—-gt-右击“属性”—-gt-高级系统设置—-gt-高级—-gt-环境变量（N）—-gt-修改Path；就是将复制的地址栏粘贴到最后。（这里注意的是不同的路径之间用英文的“；”分开）确定，退出。" class="headerlink" title="5,把刚刚复制的bin路径添加的Path变量值，具体方法是：打开电脑桌面:计算机—&gt;右击“属性”—&gt;高级系统设置—&gt;高级—&gt;环境变量（N）—&gt;修改Path；就是将复制的地址栏粘贴到最后。（这里注意的是不同的路径之间用英文的“；”分开）确定，退出。"></a>5,把刚刚复制的bin路径添加的Path变量值，具体方法是：打开电脑桌面:计算机—&gt;右击“属性”—&gt;高级系统设置—&gt;高级—&gt;环境变量（N）—&gt;修改Path；就是将复制的地址栏粘贴到最后。（这里注意的是不同的路径之间用英文的“；”分开）确定，退出。</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qst1k82pj309x041aa4.jpg" alt="avatar">  </p><h3 id="6-以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），具体方法是：右击命令提示符窗口，选择“以管理员身份运行”。然后在命令提示符窗口中，进到MySQL解压目录下的bin文件-不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误-：具体方法是：这里以D盘下的路径为例："><a href="#6-以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），具体方法是：右击命令提示符窗口，选择“以管理员身份运行”。然后在命令提示符窗口中，进到MySQL解压目录下的bin文件-不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误-：具体方法是：这里以D盘下的路径为例：" class="headerlink" title="6,以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），具体方法是：右击命令提示符窗口，选择“以管理员身份运行”。然后在命令提示符窗口中，进到MySQL解压目录下的bin文件(不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误)：具体方法是：这里以D盘下的路径为例："></a>6,以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），具体方法是：右击命令提示符窗口，选择“以管理员身份运行”。然后在命令提示符窗口中，进到MySQL解压目录下的bin文件(不管有没有配置过环境变量，也要进入bin文件夹，否则之后启动服务仍然会报错误)：具体方法是：这里以D盘下的路径为例：</h3><p>输入：D:<br>      cd MySQL\bin<br><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsu563wij30fe048mxv.jpg" alt="avatar">  </p><h3 id="7-mysqld-–initialize-insecure-–user-mysql（使用-initialize初始化，用-insecure生成空密码。默认帐号root-后面的-user-mysql不更改。）"><a href="#7-mysqld-–initialize-insecure-–user-mysql（使用-initialize初始化，用-insecure生成空密码。默认帐号root-后面的-user-mysql不更改。）" class="headerlink" title="7,mysqld –initialize-insecure –user=mysql（使用-initialize初始化，用-insecure生成空密码。默认帐号root,后面的-user=mysql不更改。）"></a>7,mysqld –initialize-insecure –user=mysql（使用-initialize初始化，用-insecure生成空密码。默认帐号root,后面的-user=mysql不更改。）</h3><h3 id="8-安装MySQL，具体方法是：在之前的D-MySQL-bin-gt-后输入：mysqld-–install"><a href="#8-安装MySQL，具体方法是：在之前的D-MySQL-bin-gt-后输入：mysqld-–install" class="headerlink" title="8,安装MySQL，具体方法是：在之前的D:\MySQL\bin&gt;后输入：mysqld –install"></a>8,安装MySQL，具体方法是：在之前的D:\MySQL\bin&gt;后输入：mysqld –install</h3><p>注：mysqld –remove命令用来删除MySQL<br><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsv6ae9mj30fe05ot9m.jpg" alt="avatar"></p><h3 id="9-启动服务，继续在cmd中输入-net-start-mysql（如图）-服务启动成功！"><a href="#9-启动服务，继续在cmd中输入-net-start-mysql（如图）-服务启动成功！" class="headerlink" title="9,启动服务，继续在cmd中输入:net start mysql（如图）,服务启动成功！"></a>9,启动服务，继续在cmd中输入:net start mysql（如图）,服务启动成功！</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsw8ek4nj30fe05ogmi.jpg" alt="avatar"><br>###注：停止服务的命令是 net stop mysql 也可以用界面方式启动和停止mysql服务。具体方法：右击“计算机”→“管理”→“服务与应用程序”→“服务”，在服务窗口中找到“mysql”服务，右击它，启动或停止。<br><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsxhsojoj30fe06z0uv.jpg" alt="avatar"><br>###注意：如果之前没有运行第7步命令：mysqld –initialize-insecure –user=mysql ，可能会造成服务不能启动。 (这时应该先用命令mysqld –remove卸载mysql，再运行该命令) 命令mysqld –initialize-insecure –user=mysql的作用：使用-initialize初始化，用-insecure生成空密码。默认帐号root,后面的-user=mysql不更改。<br><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qsygfsxtj30fe05kac0.jpg" alt="avatar">  </p><h3 id="10-服务启动成功之后，就可以登录了，如图，输入mysql-u-root-p（第一次登录没有密码，直接按回车过）-登录成功！"><a href="#10-服务启动成功之后，就可以登录了，如图，输入mysql-u-root-p（第一次登录没有密码，直接按回车过）-登录成功！" class="headerlink" title="10,服务启动成功之后，就可以登录了，如图，输入mysql -u root -p（第一次登录没有密码，直接按回车过）,登录成功！"></a>10,服务启动成功之后，就可以登录了，如图，输入mysql -u root -p（第一次登录没有密码，直接按回车过）,登录成功！</h3><p><img src="http://ww1.sinaimg.cn/large/0071fQo9gy1g9qszbbj67j30fe075t9z.jpg" alt="avatar"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="Mysql" scheme="http://125542159.github.io/tags/Mysql/"/>
    
  </entry>
  
</feed>
